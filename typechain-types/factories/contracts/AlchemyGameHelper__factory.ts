/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AlchemyGameHelper,
  AlchemyGameHelperInterface,
} from "../../contracts/AlchemyGameHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gameAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MAX_ELEMENT_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "game",
    outputs: [
      {
        internalType: "contract AlchemyGame",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllElements",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rarity",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "discovered",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "userBalance",
            type: "uint256",
          },
        ],
        internalType: "struct AlchemyGameHelper.ElementInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elementId",
        type: "uint256",
      },
    ],
    name: "getElementFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elementId",
        type: "uint256",
      },
    ],
    name: "getPossibleCombinations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalDiscoveredElements",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserElements",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rarity",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "discovered",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "userBalance",
            type: "uint256",
          },
        ],
        internalType: "struct AlchemyGameHelper.ElementInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001813380380620018138339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b6116e9806200012a6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b83c0ac31161005b578063b83c0ac3146100ee578063c3fe3e281461011e578063d6a5aaa91461013c578063e5fa6c391461016c5761007d565b806305f813f214610082578063280ca666146100a05780639a6d8d34146100be575b600080fd5b61008a61018a565b6040516100979190610e3e565b60405180910390f35b6100a86102fc565b6040516100b59190610f87565b60405180910390f35b6100d860048036038101906100d39190610fe9565b61059b565b6040516100e59190610e3e565b60405180910390f35b61010860048036038101906101039190611074565b6106de565b6040516101159190610f87565b60405180910390f35b610126610bd0565b6040516101339190611100565b60405180910390f35b61015660048036038101906101519190610fe9565b610bf4565b60405161016391906111ca565b60405180910390f35b610174610ddd565b6040516101819190610e3e565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16624563796040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b9190611201565b90506000805b828110156102f35760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e0d64b37836040518263ffffffff1660e01b81526004016102859190610e3e565b606060405180830381865afa1580156102a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c6919061125a565b9250505080156102df5782806102db906112dc565b9350505b5080806102eb906112dc565b915050610221565b50809250505090565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16624563796040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038f9190611201565b905060008167ffffffffffffffff8111156103ad576103ac611324565b5b6040519080825280602002602001820160405280156103e657816020015b6103d3610dfb565b8152602001906001900390816103cb5790505b50905060005b828110156105925760008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e0d64b37856040518263ffffffff1660e01b81526004016104539190610e3e565b606060405180830381865afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610494919061125a565b92509250925060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e33876040518363ffffffff1660e01b81526004016104f7929190611362565b602060405180830381865afa158015610514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105389190611201565b905060405180608001604052808581526020018481526020018315158152602001828152508686815181106105705761056f61138b565b5b602002602001018190525050505050808061058a906112dc565b9150506103ec565b50809250505090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e0d64b37846040518263ffffffff1660e01b81526004016105f79190610e3e565b606060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610638919061125a565b5091505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166399a5d747826040518263ffffffff1660e01b81526004016106959190610e3e565b602060405180830381865afa1580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d69190611201565b915050919050565b60606000600160176106f091906113ba565b67ffffffffffffffff81111561070957610708611324565b5b6040519080825280602002602001820160405280156107375781602001602082028036833780820191505090505b5090506000805b60178111610a1557600061076b60648361075891906113ba565b6001601761076691906113ba565b610de2565b90506000828261077b91906113ee565b67ffffffffffffffff81111561079457610793611324565b5b6040519080825280602002602001820160405280156107c25781602001602082028036833780820191505090505b509050600083836107d391906113ee565b67ffffffffffffffff8111156107ec576107eb611324565b5b60405190808252806020026020018201604052801561081a5781602001602082028036833780820191505090505b50905060005b848461082c91906113ee565b8110156108bf57888382815181106108475761084661138b565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808561088d91906113ba565b8282815181106108a05761089f61138b565b5b60200260200101818152505080806108b7906112dc565b915050610820565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e1273f484846040518363ffffffff1660e01b815260040161091e9291906114e0565b600060405180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109649190611641565b905060005b81518110156109fc578181815181106109855761098461138b565b5b602002602001015188828861099a91906113ba565b815181106109ab576109aa61138b565b5b60200260200101818152505060008282815181106109cc576109cb61138b565b5b602002602001015111156109e95786806109e5906112dc565b9750505b80806109f4906112dc565b915050610969565b5050505050606481610a0e91906113ba565b905061073e565b5060008167ffffffffffffffff811115610a3257610a31611324565b5b604051908082528060200260200182016040528015610a6b57816020015b610a58610dfb565b815260200190600190039081610a505790505b5090506000805b60178111610bc3576000858281518110610a8f57610a8e61138b565b5b60200260200101511115610bb05760008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e0d64b37856040518263ffffffff1660e01b8152600401610afc9190610e3e565b606060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d919061125a565b92509250925060405180608001604052808481526020018381526020018215158152602001898681518110610b7557610b7461138b565b5b6020026020010151815250868681518110610b9357610b9261138b565b5b60200260200101819052508480610ba9906112dc565b9550505050505b8080610bbb906112dc565b915050610a72565b5081945050505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16624563796040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c879190611201565b905060008167ffffffffffffffff811115610ca557610ca4611324565b5b604051908082528060200260200182016040528015610cd35781602001602082028036833780820191505090505b5090506000805b83811015610dce5760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663052b3d7788846040518363ffffffff1660e01b8152600401610d4092919061168a565b602060405180830381865afa158015610d5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d819190611201565b905060008114610dba5780848481518110610d9f57610d9e61138b565b5b6020026020010181815250508280610db6906112dc565b9350505b508080610dc6906112dc565b915050610cda565b50808252819350505050919050565b601781565b6000818310610df15781610df3565b825b905092915050565b60405180608001604052806000815260200160008152602001600015158152602001600081525090565b6000819050919050565b610e3881610e25565b82525050565b6000602082019050610e536000830184610e2f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e8e81610e25565b82525050565b60008115159050919050565b610ea981610e94565b82525050565b608082016000820151610ec56000850182610e85565b506020820151610ed86020850182610e85565b506040820151610eeb6040850182610ea0565b506060820151610efe6060850182610e85565b50505050565b6000610f108383610eaf565b60808301905092915050565b6000602082019050919050565b6000610f3482610e59565b610f3e8185610e64565b9350610f4983610e75565b8060005b83811015610f7a578151610f618882610f04565b9750610f6c83610f1c565b925050600181019050610f4d565b5085935050505092915050565b60006020820190508181036000830152610fa18184610f29565b905092915050565b6000604051905090565b600080fd5b600080fd5b610fc681610e25565b8114610fd157600080fd5b50565b600081359050610fe381610fbd565b92915050565b600060208284031215610fff57610ffe610fb3565b5b600061100d84828501610fd4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061104182611016565b9050919050565b61105181611036565b811461105c57600080fd5b50565b60008135905061106e81611048565b92915050565b60006020828403121561108a57611089610fb3565b5b60006110988482850161105f565b91505092915050565b6000819050919050565b60006110c66110c16110bc84611016565b6110a1565b611016565b9050919050565b60006110d8826110ab565b9050919050565b60006110ea826110cd565b9050919050565b6110fa816110df565b82525050565b600060208201905061111560008301846110f1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006111538383610e85565b60208301905092915050565b6000602082019050919050565b60006111778261111b565b6111818185611126565b935061118c83611137565b8060005b838110156111bd5781516111a48882611147565b97506111af8361115f565b925050600181019050611190565b5085935050505092915050565b600060208201905081810360008301526111e4818461116c565b905092915050565b6000815190506111fb81610fbd565b92915050565b60006020828403121561121757611216610fb3565b5b6000611225848285016111ec565b91505092915050565b61123781610e94565b811461124257600080fd5b50565b6000815190506112548161122e565b92915050565b60008060006060848603121561127357611272610fb3565b5b6000611281868287016111ec565b9350506020611292868287016111ec565b92505060406112a386828701611245565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112e782610e25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611319576113186112ad565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61135c81611036565b82525050565b60006040820190506113776000830185611353565b6113846020830184610e2f565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006113c582610e25565b91506113d083610e25565b92508282019050808211156113e8576113e76112ad565b5b92915050565b60006113f982610e25565b915061140483610e25565b925082820390508181111561141c5761141b6112ad565b5b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61145781611036565b82525050565b6000611469838361144e565b60208301905092915050565b6000602082019050919050565b600061148d82611422565b611497818561142d565b93506114a28361143e565b8060005b838110156114d35781516114ba888261145d565b97506114c583611475565b9250506001810190506114a6565b5085935050505092915050565b600060408201905081810360008301526114fa8185611482565b9050818103602083015261150e818461116c565b90509392505050565b600080fd5b6000601f19601f8301169050919050565b6115368261151c565b810181811067ffffffffffffffff8211171561155557611554611324565b5b80604052505050565b6000611568610fa9565b9050611574828261152d565b919050565b600067ffffffffffffffff82111561159457611593611324565b5b602082029050602081019050919050565b600080fd5b60006115bd6115b884611579565b61155e565b905080838252602082019050602084028301858111156115e0576115df6115a5565b5b835b8181101561160957806115f588826111ec565b8452602084019350506020810190506115e2565b5050509392505050565b600082601f83011261162857611627611517565b5b81516116388482602086016115aa565b91505092915050565b60006020828403121561165757611656610fb3565b5b600082015167ffffffffffffffff81111561167557611674610fb8565b5b61168184828501611613565b91505092915050565b600060408201905061169f6000830185610e2f565b6116ac6020830184610e2f565b939250505056fea2646970667358221220721f34e7d549322b1db8402d1da6e1379e5495e052fb2985b25020bbb374da5964736f6c63430008140033";

type AlchemyGameHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlchemyGameHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlchemyGameHelper__factory extends ContractFactory {
  constructor(...args: AlchemyGameHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gameAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_gameAddress, overrides || {});
  }
  override deploy(
    _gameAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_gameAddress, overrides || {}) as Promise<
      AlchemyGameHelper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AlchemyGameHelper__factory {
    return super.connect(runner) as AlchemyGameHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlchemyGameHelperInterface {
    return new Interface(_abi) as AlchemyGameHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AlchemyGameHelper {
    return new Contract(address, _abi, runner) as unknown as AlchemyGameHelper;
  }
}
